<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.say.dao.FriendsMapper" >
  <resultMap id="BaseResultMap" type="com.say.bean.Friends" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="fid" property="fid" jdbcType="INTEGER" />
    <result column="meid" property="meid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, fid, meid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.say.bean.FriendsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from friends
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from friends
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from friends
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.say.bean.FriendsExample" >
    delete from friends
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.say.bean.Friends" >
    insert into friends (id, fid, meid
      )
    values (#{id,jdbcType=INTEGER}, #{fid,jdbcType=INTEGER}, #{meid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.say.bean.Friends" >
    insert into friends
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="fid != null" >
        fid,
      </if>
      <if test="meid != null" >
        meid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="fid != null" >
        #{fid,jdbcType=INTEGER},
      </if>
      <if test="meid != null" >
        #{meid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.say.bean.FriendsExample" resultType="java.lang.Integer" >
    select count(*) from friends
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update friends
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.fid != null" >
        fid = #{record.fid,jdbcType=INTEGER},
      </if>
      <if test="record.meid != null" >
        meid = #{record.meid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update friends
    set id = #{record.id,jdbcType=INTEGER},
      fid = #{record.fid,jdbcType=INTEGER},
      meid = #{record.meid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.say.bean.Friends" >
    update friends
    <set >
      <if test="fid != null" >
        fid = #{fid,jdbcType=INTEGER},
      </if>
      <if test="meid != null" >
        meid = #{meid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.say.bean.Friends" >
    update friends
    set fid = #{fid,jdbcType=INTEGER},
      meid = #{meid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getFriends" parameterType="Map" resultType="Map">
    select
    u.uid,u.username,u.number,u.password,u.email,u.sex,u.age,u.birthday,u.signature,u.headportrait
    from
    user u,friends f
    where
     meid = #{meid} and u.uid = #{fid} and f.fid = #{fid}
  </select>
  <delete id="deleteFriends" parameterType="java.lang.Integer">
    delete from friends
    where meid = #{meid,jdbcType=INTEGER} and fid = #{fid,jdbcType=INTEGER}
  </delete>
  <delete id="delFriends" parameterType="java.lang.Integer">
    delete from friends
    where meid = #{fid,jdbcType=INTEGER} and fid = #{meid,jdbcType=INTEGER}
  </delete>
  <select id="findFriends" parameterType="Map" resultType="Map">
    select
        u.uid,u.username,u.number,u.password,u.phone,u.email,u.sex,u.age,u.birthday,u.signature,u.headportrait
    FROM user u,friends f
    WHERE
        f.meid = #{meid}
    and
        f.fid = u.uid
  </select>
</mapper>